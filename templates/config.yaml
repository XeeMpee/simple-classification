general:
  # input file path
  input: "data_file.csv"
  # tag of classifying column
  class-tag: "class"
  # defined learning model
  # value: array of one-of ["svm", "random-forest"] values
  learn-models: null
  # value: array of one-of [ "voting-classifier-soft",  "voting-classifier-hard",  "stacking-classifier"] values
  # when set to null, all models will be trained separately
  ensemble-learning-classifiers: False
  #  train size percentage size
  train-size: 0.8
  # data spec will be generated in docs
  generate-dataspec: False
  # generating report for all metrics
  metrics-report: True

data-preprocessing:
  # break down random cells for education purposes
  # value: <float[0,1]> - probability of corruption
  random-corruption: 0.0
  # defines policy of malformed data handling
  # value one-of [
  # "restore" - restore malformed data with mean of rest features in row
  # "remove" - removes row where malformed data occurs
  # ]
  malformed-policy: null
  # saves preprocessed dataframe copy to csv file 
  save-dataframe: False
  # reduces dimensions with pca analyses
  # value: <int> - amount of output features
  pca: null
  # array of tags for columns dedicated to remove
  redundant-columns: null
  # array of cells with values are treated as malformed
  malformed-values: null

optimization:
  # parameter selection methods used for model optimization
  # value: array of one-of ["genetic-algorithm"] values
  parameter-selection-methods: "genetic-algorithm"

  # methods of model efficiency measurements 
  # value: array of one-of ["f1-score", "accuracy", "confusion-matrix"] values
  metrics: "f1-score"
